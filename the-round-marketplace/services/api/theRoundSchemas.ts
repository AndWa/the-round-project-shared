/**
 * Generated by @openapi-codegen
 *
 * @version 1.0
 */
export type CreateVenueDto = {
  isActive?: boolean;
  title: string;
  shortDescription: string;
  longDescription: string;
  bannerUrl: string;
  logoUrl: string;
  latitude?: number;
  longitude?: number;
  websiteUrl?: string;
};

export type Location = {};

export type User = {
  /*
   * @format date-time
   */
  updatedAt: string;
  /*
   * @format date-time
   */
  createdAt: string;
  isCensored: boolean;
  isActive: boolean;
  uid: string;
  accountType: string;
  roles: string[];
  username: string;
  nearWalletAccountId: string;
  seedPhraseHash: string;
  bookmarkedEvents: any[][];
  bookmarkedVenues: any[][];
  otp: string;
  otpExpirationDate: string;
};

export type Venue = {
  /*
   * @format date-time
   */
  updatedAt: string;
  /*
   * @format date-time
   */
  createdAt: string;
  isCensored: boolean;
  isActive: boolean;
  title: string;
  slug: string;
  shortDescription: string;
  longDescription: string;
  logoUrl: string;
  bannerUrl: string;
  websiteUrl: string;
  location: Location;
  owner: User;
};

export type Event = {
  /*
   * @format date-time
   */
  updatedAt: string;
  /*
   * @format date-time
   */
  createdAt: string;
  isCensored: boolean;
  isActive: boolean;
  isMature: boolean;
  title: string;
  slug: string;
  type: string;
  shortDescription: string;
  longDescription: string;
  /*
   * @format date-time
   */
  startDate: string;
  /*
   * @format date-time
   */
  endDate: string;
  bannerUrl: string;
  mediaUrl: string;
  mediaUrls: string[];
  trailerUrl: string;
  venue: Venue;
};

export type Ticket = {
  afterEventMedia: string;
  utilityInstructions: string;
  reedemableCodes: string[];
};

export type Merchandise = {
  equippable: boolean;
  model: string;
};

export type VenuePass = {
  daysValid: number;
};

export type Listing = {
  /*
   * @format date-time
   */
  updatedAt: string;
  /*
   * @format date-time
   */
  createdAt: string;
  isCensored: boolean;
  isActive: boolean;
  media: string;
  title: string;
  slug: string;
  description: string;
  price: number;
  stock: number;
  available: number;
  marketplaceRoyalty: number;
  royalties: [];
  /*
   * @format date-time
   */
  startDate: string;
  /*
   * @format date-time
   */
  endDate: string;
  ticket: Ticket;
  merchandise: Merchandise;
  venuePass: VenuePass;
  event: Event;
  venue: Venue;
  tokenSeriesId: string;
  nft: Record<string, any>;
};

export type UpdateVenueDto = {};

export type CreateRoyaltyDto = {
  walletAddress: string;
  royaltyPercentage: number;
};

export type CreateTicketDto = {
  afterEventMedia?: string;
  utilityInstructions?: string;
  reedemableCodes?: string[];
};

export type CreateMerchandiseDto = {
  equippable: boolean;
  model?: string;
};

export type CreateVenuePassDto = {
  daysValid: number;
};

export type CreateListingDto = {
  isCensored: boolean;
  isActive: boolean;
  media: string;
  title: string;
  description?: string;
  price?: number;
  stock?: number;
  available?: number;
  marketplaceRoyalty?: number;
  royalties: CreateRoyaltyDto[];
  /*
   * @format date-time
   */
  startDate: string;
  /*
   * @format date-time
   */
  endDate?: string;
  event?: string;
  venue?: string;
  ticket?: CreateTicketDto;
  merchandise?: CreateMerchandiseDto;
  venuePass?: CreateVenuePassDto;
  tokenSeriesId: string;
};

export type UpdateListingDto = {
  isCensored?: boolean;
  isActive?: boolean;
  media?: string;
  title?: string;
  description?: string;
  price?: number;
  stock?: number;
  available?: number;
  marketplaceRoyalty?: number;
  royalties?: CreateRoyaltyDto[];
  /*
   * @format date-time
   */
  startDate?: string;
  /*
   * @format date-time
   */
  endDate?: string;
  event?: string;
  venue?: string;
  ticket?: CreateTicketDto;
  merchandise?: CreateMerchandiseDto;
  venuePass?: CreateVenuePassDto;
  tokenSeriesId?: string;
};

export type StreamableFile = {};

export type CreateEventDto = {
  title: string;
  isMature: boolean;
  isActive: boolean;
  type: string;
  shortDescription: string;
  longDescription: string;
  /*
   * @format date-time
   */
  startDate: string;
  /*
   * @format date-time
   */
  endDate: string;
  bannerUrl: string;
  mediaUrl: string;
  mediaUrls?: string[];
  trailerUrl?: string;
  venue: string;
};

export type UpdateEventDto = {
  title?: string;
  isMature?: boolean;
  isActive?: boolean;
  type?: string;
  shortDescription?: string;
  longDescription?: string;
  /*
   * @format date-time
   */
  startDate?: string;
  /*
   * @format date-time
   */
  endDate?: string;
  bannerUrl?: string;
  mediaUrl?: string;
  mediaUrls?: string[];
  trailerUrl?: string;
  venue?: string;
};

export type NearLoginDto = {
  username: string;
  signedJsonString: string;
};

export type Response = {
  token: string;
};

export type FirebaseLoginDto = {
  jwt: string;
};

export type OtpResponse = {
  otp: string;
  /*
   * @format date-time
   */
  expirationDate: string;
};

export type OtpBody = {
  otp: string;
};

export type CreateUserDto = {};

export type UpdateUserDto = {};
